openapi: 3.1.0
info:
  contact: {}
  title: Alerts
  version: 3.9.4
  x-logo:
    url: 'https://tatum.io/images/logo.svg'
    altText: Tatum
  description: |-
          <p>Endpoints to handle subscriptions to the Tatum Platform. Subscriptions allow users to enable some additional features or reports that are not enabled by default,
          like outgoing off-chain transaction scanning, accounts with balances above the limit, etc.</p>
servers:
  - url: 'https://api-eu1.tatum.io'
  - url: 'https://api-us-west1.tatum.io'
tags:
  - description: ''
    name: Subscription
  - description: ''
    name: HMAC
paths:
  /v3/subscription:
    post:
      description: |
        <h4>2 credits for API call. Every type of subscription has different credit pricing.</h4><br/>
        <p>Create new subscription as a HTTP Web Hook. Currently Tatum support multiple subscription types:
        <ul>
        <li><b>ADDRESS_TRANSACTION</b> - Enable HTTP POST JSON notifications for any blockchain transactions at the specified address.<br/>
        This webhook will be sent when a transaction arrives to or is sent from the blockchain address specified in the call - this applies to both incoming/outgoing transactions in the native currency of the blockchain as well as any incoming/outgoing transactions for any type of token.
        Free community plans can monitor up to 10 addresses per plan.<br/><br/>
        Please refer to the availability and consumption table below.
        <table>
          <tr>
            <th>Chain</th>
            <th>Testnet/Mainnet</th>
            <th>Token assets support</th>
            <th>Plan limitation</th>
            <th>Credit consumption / day / address</th>
          </tr>
          <tr>
            <td>Solana</td>
            <td>Yes/Yes</td>
            <td>SOL, SLP and NFTs</td>
            <td>Free plans - 10 addresses across all blockchains, Paid plans - unlimited addresses across all blockchains</td>
            <td>50 credits / day / address</td>
          </tr>
          <tr>
            <td>Terra Luna</td>
            <td>Yes/Yes</td>
            <td>LUNA, KRW, USD and all other assets</td>
            <td>Free plans - 10 addresses across all blockchains, Paid plans - unlimited addresses across all blockchains</td>
            <td>30 credits / day / address</td>
          </tr>
          <tr>
            <td>Ethereum</td>
            <td>Yes/Yes</td>
            <td>ETH, Internal transfers, ERC20, ERC721, ERC1155</td>
            <td>Free plans - 10 addresses across all blockchains, Paid plans - unlimited addresses across all blockchains</td>
            <td>25 credits / day / address</td>
          </tr>
          <tr>
            <td>Polygon</td>
            <td>Yes/Yes</td>
            <td>MATIC, ERC20, ERC721, ERC1155</td>
            <td>Free plans - 10 addresses across all blockchains, Paid plans - unlimited addresses across all blockchains</td>
            <td>40 credits / day / address</td>
          </tr>
          <tr>
            <td>Celo</td>
            <td>Yes/Yes</td>
            <td>CELO, Internal transfers, ERC20, ERC721, ERC1155</td>
            <td>Free plans - 10 addresses across all blockchains, Paid plans - unlimited addresses across all blockchains</td>
            <td>25 credits / day / address</td>
          </tr>
          <tr>
            <td>Klaytn</td>
            <td>Yes/Yes</td>
            <td>Klay, ERC20, ERC721, ERC1155</td>
            <td>Free plans - 10 addresses across all blockchains, Paid plans - unlimited addresses across all blockchains</td>
            <td>25 credits / day / address</td>
          </tr>
          <tr>
            <td>Bitcoin</td>
            <td>Yes/Yes</td>
            <td>BTC</td>
            <td>Free plans - 10 addresses across all blockchains, Paid plans - unlimited addresses across all blockchains</td>
            <td>20 credits / day / address</td>
          </tr>
          <tr>
            <td>Litecoin</td>
            <td>Yes/Yes</td>
            <td>LTC</td>
            <td>Free plans - 10 addresses across all blockchains, Paid plans - unlimited addresses across all blockchains</td>
            <td>20 credits / day / address</td>
          </tr>
          <tr>
            <td>Bitcoin Cash</td>
            <td>Yes/Yes</td>
            <td>BCH, only incoming transactions</td>
            <td>Free plans - 10 addresses across all blockchains, Paid plans - unlimited addresses across all blockchains</td>
            <td>20 credits / day / address</td>
          </tr>
          <tr>
            <td>Dogecoin</td>
            <td>Yes/Yes</td>
            <td>DOGE, only incoming transactions</td>
            <td>Free plans - 10 addresses across all blockchains, Paid plans - unlimited addresses across all blockchains</td>
            <td>20 credits / day / address</td>
          </tr>
          <tr>
            <td>Tron</td>
            <td>Yes/Yes</td>
            <td>Tron, TRC10/TRC20</td>
            <td>Free plans - 10 addresses across all blockchains, Paid plans - unlimited addresses across all blockchains</td>
            <td>30 credits / day / address</td>
          </tr>
        </table>
        Request body of the POST request will be JSON object with attributes:<br/>
        <pre>{
          "address": "FykfMwA9WNShzPJbbb9DNXsfgDgS3XZzWiFgrVXfWoPJ", // address on which the transaction occurs. For EVM chains, this is recipient address
          "txId": "2rdy3YCZHSwvpWtuDom1d4Jjy5UU9STLxF3ffXau6GToReDkfw8wEgX541fvzvh6btVC5D8iNapcKTXfPsoDBk7A", // transaction id
          "blockNumber": 110827114, // block number
          "asset": "3gUeeR3BfVhukYJMwtHownRtRkGcf1bvwiV8TbKMZBVz", // Asset of transaction, for token assets it is address of that token, for native name of the native asset like SOL
          "amount": "1", // amount of the asset that was credited (+) or debited (-) from the address. In case of EVM chains, amount is always positive when counterAddress is present
          "tokenId": "1", // ID of the transferred token, if it is ERC721 / ERC1155
          "type": "token", // type of transaction, could be 'native' or 'token'
          "counterAddress": undefined // optional counter party address of the transaction. For EVM chains, this is recipient address
        }</pre>
        5 credits will be debited for every fired webhook.<br/></li>
        <li><b>ACCOUNT_INCOMING_BLOCKCHAIN_TRANSACTION</b> - Enable HTTP POST JSON notifications on incoming blockchain transactions on virtual accounts.
        This web hook will be invoked, when the transaction is credited to the virtual account. Transaction is credited, when it has sufficient amount of blockchain confirmations.
        For BTC, LTC, BCH, DOGE - 2 confirmations, others - 1 confirmation.
        Request body of the POST request will be JSON object with attributes:<br/>
        <pre>{
          "date": 1619176527481,
          "amount": "0.005",
          "currency": "BTC",
          "id": "6082ab462936b4478117c6a0",
          "reference: "c9875708-4ba3-41c9-a4cd-271048b41b9a", // ledger transaction reference
          "txId": "45af182a0ffab58e5ba32fee57b297b2260c6e23a1de5ddc76c7ee22d72dea99",
          "blockHash": "45af182a0ffab58e5ba32fee57b297b2260c6e23a1de5ddc76c7ee22d72dea99", // hash of the block, might not be present all the time
          "blockHeight": 12345,
          "from": "SENDER_ADDRESS", // might not ebe present all the time, for UTXO based blockchains it's not there
          "to": "RECIPIENT_ADDRESS_CONNECTED_TO_LEDGER_ACCOUNT", // blockchain address of the recipient
          "index": 5 // for UTXO based chains (BTC,LTC,DOGE,BCH,ADA) this is the index of the output in the transaction
        }</pre>
        1 credit will be debited for every monitored account every day.</li>
        <li><b>ACCOUNT_PENDING_BLOCKCHAIN_TRANSACTION</b> - Enable HTTP POST JSON notifications on incoming blockchain transactions on virtual accounts.
        This web hook will be invoked, when the transaction appears for the first time in the block - it has 1 confirmation, but is still not credited to the ledger account, because it does not have enough confirmations.
        This web hook is invoked only for BTC, LTC, DOGE and BCH accounts.
        Request body of the POST request will be JSON object with attributes:<br/>
        <pre>{
          "date": 1619176527481,
          "amount": "0.005",
          "currency": "BTC",
          "id": "6082ab462936b4478117c6a0",
          "reference: "c9875708-4ba3-41c9-a4cd-271048b41b9a", // ledger transaction reference
          "txId": "45af182a0ffab58e5ba32fee57b297b2260c6e23a1de5ddc76c7ee22d72dea99",
          "blockHash": "45af182a0ffab58e5ba32fee57b297b2260c6e23a1de5ddc76c7ee22d72dea99", // hash of the block, might not be present all the time
          "blockHeight": 12345,
          "from": "SENDER_ADDRESS", // might not ebe present all the time, for UTXO based blockchains it's not there
          "to": "RECIPIENT_ADDRESS_CONNECTED_TO_LEDGER_ACCOUNT", // blockchain address of the recipient
          "index": 5 // for UTXO based chains (BTC,LTC,DOGE,BCH,ADA) this is the index of the output in the transaction
        }</pre>
        1 credit will be debited for every monitored account every day.</li>
        <li><b>CUSTOMER_TRADE_MATCH</b> - Enable HTTP POST JSON notifications on closed trade, which occurs on any customer account.
        This web hook will be invoked, when the open trade is filled and closed. Works also for the Trade Futures. If is triggered by the futures, bool field expiredWithoutMatch is present.
        Request body of the POST request will be JSON object with attributes:<br/>
        <pre>{
          "created": 1619176527481,
          "amount": "0.005",
          "price": "0.02",
          "type": "SELL",
          "pair": "VC_CHF/VC_CHF3",
          "id": "6082ab462936b4478117c6a0", // id of the trade
          "currency1AccountId": "6082ab462936b4478117c6a0",
          "currency2AccountId": "6082ab512936b4478117c6a2",
          "fee": null,
          "feeAccountId": null,
          "isMaker": true,
          "expiredWithoutMatch": false
        }</pre>
        10 credits will be debited for every monitored customer every day.</li>
        <li><b>CUSTOMER_PARTIAL_TRADE_MATCH</b> - Enable HTTP POST JSON notifications on partialy filled trade, which occurs on any customer account.
        This web hook will be invoked, when the open trade is partialy filled.
        Request body of the POST request will be JSON object with attributes:<br/>
        <pre>{
          "created": 1619176527481,
          "amount": "0.005",
          "price": "0.02",
          "type": "SELL",
          "pair": "VC_CHF/VC_CHF3",
          "id": "6082ab462936b4478117c6a0", // id of the trade
          "currency1AccountId": "6082ab462936b4478117c6a0",
          "currency2AccountId": "6082ab512936b4478117c6a2",
          "fee": null,
          "feeAccountId": null,
          "isMaker": true,
          "expiredWithoutMatch": false
        }</pre>
        10 credits will be debited for every monitored customer every day.</li>
        <li><b>TRANSACTION_IN_THE_BLOCK</b> - Enable HTTP POST JSON notifications on ledger => blockchain transaction, when transaction is included in the block.
        This web hook will be invoked, when the outgoing transaction is included in the block.
        Request body of the POST request will be JSON object with attributes:<br/>
        <pre>
          {
            "txId": "0x026f4f05b972c09279111da13dfd20d8df04eff436d7f604cd97b9ffaa690567",
            "reference": "90270634-5b07-4fad-b17b-f82899953533",
            "accountId": "6082ab462936b4478117c6a0",
            "currency": "BSC",
            "withdrawalId": "608fe5b73a893234ba379ab2",
            "address": "0x8ce4e40889a13971681391AAd29E88eFAF91f784",
            "amount": "0.1",
            "blockHeight": 8517664
          }</pre>
        10 credits will be debited every day, 1 credit for every included transaction notified via web hook.</li>
        <li><b>KMS_FAILED_TX</b> - Enable HTTP POST JSON notifications on error during KMS signature process.
        This web hook will be invoked, when the Tatum KMS receives error during processing transactions.
        Request body of the POST request will be JSON object with attributes:<br/>
        <pre>{
          "signatureId": "6082ab462936b4478117c6a0",
          "error": "Error message from the KMS"
        }</pre>
        10 credits will be debited every day.</li>
        <li><b>KMS_COMPLETED_TX</b> - Enable HTTP POST JSON notifications on successful completion of KMS signature process.
        This web hook will be invoked, when the Tatum KMS sudessfully completes the signature during processing transactions.
        Request body of the POST request will be JSON object with attributes:<br/>
        <pre>{
          "signatureId": "6082ab462936b4478117c6a0",
          "txId": "0x7bb7d3b90567e89f999f2e3d263bc3738a018dbbcfa9f5397678cf17cdf0235f"
        }</pre>
        10 credits will be debited every day.</li>
        <li><b>OFFCHAIN_WITHDRAWAL</b> - Off-chain scanning of outgoing transactions for BTC, BCH, LTC, DOGE and ETH blockchains - by default addresses in registered for off-chain
        scanning are synchronized only against incoming transactions. By enabling this feature, off-chain accounts with connected blockchain addresses
        will be scanned also for outgoing transactions. This transaction wil be recorder to the ledger and account balance will be decreased - don't use it if you perform your own transactions
        from the account to the blockchain.<br/>
        20 credits will be debited for every address registered for scanning every day.</li>
        <li><b>ACCOUNT_BALANCE_LIMIT</b> - Report with all account balances above desired limit.</li>
        <li><b>TRANSACTION_HISTORY_REPORT</b> - Report with all ledger transactions for last X hours, where X is set by the subscription attribute as interval.
        Maximum number of transactions returned by this report is 20000. Transactions are obtained from the time of the invocation of the GET method to obtain report - X hours.</li>
        </ul>
        In case of unsuccesful web hook response status - other then 2xx - web hook is repeated 9 more times with exponential backoff.
        Parameters are T = 15 * 2.7925^9, where 15 is interval in s, backoff rate is 2.7925 and 9 is current number of retries. Last web hook is fired after 24 hours approximatelly. After last failed attempt, web hook is deleted from our system. The 2xx response must be returned in 10 seconds after web hook is fired.<br/>
        Result of the operation is subscription ID, which can be used to cancel subscription or obtain additional data connected to it like reports.</p>
      operationId: createSubscription
      summary: Create new subscription
      tags:
        - Subscription
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  title: ADDRESS_TRANSACTION
                  required:
                    - type
                    - attr
                  properties:
                    type:
                      type: string
                      description: Type of the subscription.
                      example: ADDRESS_TRANSACTION
                      enum:
                        - ADDRESS_TRANSACTION
                    attr:
                      type: object
                      description: Additional attributes based on the subscription type.
                      required:
                        - chain
                        - address
                        - url
                      properties:
                        address:
                          description: Blockchain address to watch.
                          example: FykfMwA9WNShzPJbbb9DNXsfgDgS3XZzWiFgrVXfWoPJ
                          maxLength: 128
                          minLength: 13
                          type: string
                        chain:
                          description: Blockchain of the address.
                          example: SOL
                          type: string
                          enum:
                            - SOL
                            - BTC
                            - LTC
                            - DOGE
                            - ETH
                            - MATIC
                            - KLAY
                            - LUNA
                            - CELO
                            - BCH
                        url:
                          type: string
                          description: 'URL of the endpoint, where HTTP POST request will be sent, when transaction is detected on the address.'
                          example: 'https://webhook.tatum.io/account'
                          maxLength: 500
                - type: object
                  title: ACCOUNT_INCOMING_BLOCKCHAIN_TRANSACTION
                  required:
                    - type
                    - attr
                  properties:
                    type:
                      type: string
                      description: Type of the subscription.
                      example: ACCOUNT_INCOMING_BLOCKCHAIN_TRANSACTION
                      enum:
                        - ACCOUNT_INCOMING_BLOCKCHAIN_TRANSACTION
                    attr:
                      type: object
                      description: Additional attributes based on the subscription type.
                      required:
                        - id
                        - url
                      properties:
                        id:
                          description: 'ID of the account, on which the webhook will be applied, when new incoming blockchain transaction will be credited.'
                          example: 5e6be8e9e6aa436299950c41
                          maxLength: 24
                          minLength: 24
                          type: string
                        url:
                          type: string
                          description: 'URL of the endpoint, where HTTP POST request will be sent, when new incoming blockchain transaction will be credited.'
                          example: 'https://webhook.tatum.io/account'
                          maxLength: 500
                - type: object
                  title: ACCOUNT_PENDING_BLOCKCHAIN_TRANSACTION
                  required:
                    - type
                    - attr
                  properties:
                    type:
                      type: string
                      description: Type of the subscription.
                      example: ACCOUNT_PENDING_BLOCKCHAIN_TRANSACTION
                      enum:
                        - ACCOUNT_PENDING_BLOCKCHAIN_TRANSACTION
                    attr:
                      type: object
                      description: Additional attributes based on the subscription type.
                      required:
                        - id
                        - url
                      properties:
                        id:
                          description: 'ID of the account, on which the webhook will be applied, when new incoming pending blockchain transaction with 0 confirmations will be credited.'
                          example: 5e6be8e9e6aa436299950c41
                          maxLength: 24
                          minLength: 24
                          type: string
                        url:
                          type: string
                          description: 'URL of the endpoint, where HTTP POST request will be sent, when new incoming pending blockchain transaction with 0 confirmations will be credited.'
                          example: 'https://webhook.tatum.io/account'
                          maxLength: 500
                - type: object
                  title: CUSTOMER_TRADE_MATCH
                  required:
                    - type
                    - attr
                  properties:
                    type:
                      type: string
                      description: Type of the subscription.
                      example: CUSTOMER_TRADE_MATCH
                      enum:
                        - CUSTOMER_TRADE_MATCH
                    attr:
                      type: object
                      description: Additional attributes based on the subscription type.
                      required:
                        - id
                        - url
                      properties:
                        id:
                          description: 'ID of the customer, on which the webhook will be applied, when on any of his accounts trade will be matched and closed.'
                          example: 5e6be8e9e6aa436299950c41
                          maxLength: 24
                          minLength: 24
                          type: string
                        url:
                          type: string
                          description: 'URL of the endpoint, where HTTP POST request will be sent, when on any of his accounts trade will be matched and closed.'
                          example: 'https://webhook.tatum.io/trade'
                          maxLength: 500
                - type: object
                  title: KMS_FAILED_TX
                  required:
                    - type
                    - attr
                  properties:
                    type:
                      type: string
                      description: Type of the subscription.
                      example: KMS_FAILED_TX
                      enum:
                        - KMS_FAILED_TX
                    attr:
                      type: object
                      description: Additional attributes based on the subscription type.
                      required:
                        - url
                      properties:
                        url:
                          type: string
                          description: 'URL of the endpoint, where HTTP POST request will be sent, when error occurs inside Tatum KMS.'
                          example: 'https://webhook.tatum.io/kms'
                          maxLength: 500
                - type: object
                  title: KMS_COMPLETED_TX
                  required:
                    - type
                    - attr
                  properties:
                    type:
                      type: string
                      description: Type of the subscription.
                      example: KMS_COMPLETED_TX
                      enum:
                        - KMS_COMPLETED_TX
                    attr:
                      type: object
                      description: Additional attributes based on the subscription type.
                      required:
                        - url
                      properties:
                        url:
                          type: string
                          description: 'URL of the endpoint, where HTTP POST request will be sent, when tx is sucessfully broadcasted using Tatum KMS.'
                          example: 'https://webhook.tatum.io/kms'
                          maxLength: 500
                - type: object
                  title: TRANSACTION_IN_THE_BLOCK
                  required:
                    - type
                    - attr
                  properties:
                    type:
                      type: string
                      description: Type of the subscription.
                      example: TRANSACTION_IN_THE_BLOCK
                      enum:
                        - TRANSACTION_IN_THE_BLOCK
                    attr:
                      type: object
                      description: Additional attributes based on the subscription type.
                      required:
                        - url
                      properties:
                        url:
                          type: string
                          description: 'URL of the endpoint, where HTTP POST request will be sent, when outgoing ledger transaction is included in the block.'
                          example: 'https://webhook.tatum.io/outgoing-tx'
                          maxLength: 500
                - type: object
                  title: OFFCHAIN_WITHDRAWAL
                  required:
                    - type
                    - attr
                  properties:
                    type:
                      type: string
                      description: Type of the subscription.
                      example: OFFCHAIN_WITHDRAWAL
                      enum:
                        - OFFCHAIN_WITHDRAWAL
                    attr:
                      type: object
                      description: Additional attributes based on the subscription type.
                      required:
                        - currency
                      properties:
                        currency:
                          type: string
                          description: 'Currency of the accounts, on which outgoing off-chain scanning will be enabled. BTC, LTC, DOGE, BCH, ETH and ERC20 tokens are allowed.'
                          example: BTC
                          minLength: 1
                          maxLength: 30
                          pattern: '^BTC|ADA|LTC|DOGE|ONE|XDC|FLOW|FUSD|BSC|ADA|BETH|BUSD|BUSD_BSC|CAKE|BBTC|BADA|WBNB|BDOT|BXRP|BLTC|BBCH|BCH|ETH|USDT|WBTC|LEO|LINK|GMC|GMC_BSC|RMD|UNI|FREE|MKR|USDC|BAT|TUSD|PAX|PAXG|PLTC|XCON|MMY|EGLD|[a-zA-Z0-9_]+$'
                - type: object
                  title: ACCOUNT_BALANCE_LIMIT
                  required:
                    - type
                    - attr
                  properties:
                    type:
                      type: string
                      description: Type of the subscription.
                      example: ACCOUNT_BALANCE_LIMIT
                      enum:
                        - ACCOUNT_BALANCE_LIMIT
                    attr:
                      type: object
                      description: Additional attributes based on the subscription type.
                      required:
                        - limit
                        - typeOfBalance
                      properties:
                        limit:
                          type: string
                          description: Limit to filter accounts with balance above it.
                          example: '15000'
                          pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                          maxLength: 38
                        typeOfBalance:
                          type: string
                          description: Type of balance to filter.
                          enum:
                            - account
                            - available
                - type: object
                  title: TRANSACTION_HISTORY_REPORT
                  required:
                    - type
                    - attr
                  properties:
                    type:
                      type: string
                      description: Type of the subscription.
                      example: TRANSACTION_HISTORY_REPORT
                      enum:
                        - TRANSACTION_HISTORY_REPORT
                    attr:
                      type: object
                      description: Additional attributes based on the subscription type.
                      required:
                        - interval
                      properties:
                        interval:
                          type: number
                          description: Number of hours to obtain transactions for.
                          example: 1
                          minimum: 1
                          maximum: 720
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the entity.
                    example: 5e68c66581f2ee32bc354087
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: subscription.type.invalid
                        example: subscription.type.invalid
                        type: string
                      message:
                        description: Invalid subscription type.
                        example: Invalid subscription type.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: subscription.attr.currency.invalid
                        example: subscription.attr.currency.invalid
                        type: string
                      message:
                        description: Invalid subscription attribute 'currency'.
                        example: Invalid subscription attribute 'currency'.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: subscription.attr.balance.invalid
                        example: subscription.attr.balance.invalid
                        type: string
                      message:
                        description: Invalid subscription attribute 'limit' or 'typeOfBalance'.
                        example: Invalid subscription attribute 'limit' or 'typeOfBalance'.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: subscription.attr.interval.invalid
                        example: subscription.attr.interval.invalid
                        type: string
                      message:
                        description: Invalid subscription attribute 'interval'.
                        example: Invalid subscription attribute 'interval'.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: subscription.attr.incoming.invalid
                        example: subscription.attr.incoming.invalid
                        type: string
                      message:
                        description: Invalid subscription attribute 'id' or 'url'.
                        example: Invalid subscription attribute 'id' or 'url'.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: subscription.attr.pending.invalid
                        example: subscription.attr.pending.invalid
                        type: string
                      message:
                        description: Invalid subscription attribute 'id' or 'url'.
                        example: Invalid subscription attribute 'id' or 'url'.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
    get:
      description: <h4>1 credit per API call.</h4><br/><p>List all active subscriptions.</p>
      summary: List all active subscriptions
      tags:
        - Subscription
      operationId: getSubscriptions
      parameters:
        - description: Max number of items per page is 50.
          in: query
          name: pageSize
          schema:
            type: number
            example: 10
            maximum: 50
            minimum: 1
          required: true
        - description: Offset to obtain next page of the data.
          in: query
          name: offset
          schema:
            type: number
            example: 0
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      description: Type of the subscription.
                      example: ACCOUNT_BALANCE_LIMIT
                      enum:
                        - ACCOUNT_BALANCE_LIMIT
                        - OFFCHAIN_WITHDRAWAL
                    id:
                      type: string
                      description: ID of the subscription
                      example: 7c21ed165e294db78b95f0f1
                    attr:
                      type: object
                      description: Additional attributes based on the subscription type.
                type: array
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
    put:
      description: |
        <h4>2 credits per API call.</h4><br/><p>Enable HMAC hash ID on the fired webhooks from Tatum API.
        In order to make sure that a webhook is sent by us, we have the possibility to sign it with the HMAC Sha512 Hex algorithm.<br/>
        To verify that a webhook is sent by us
        <ol>
        <li>Get a webhook <b>x-payload-hash</b> header value and payload as it is as a JSON file.</li>
        <li>Convert the HTTP webhook body to stringify JSON without any spaces. In JavaScript, you would do it like this <pre>JSON.stringify(req.body)</pre></li>
        <li>Perform calculations on your side to create a digest using Secret Key, webhook payload in bytes and HMAC SHA512 algorithm. JavaScript example:
        <pre>require('crypto').createHmac('sha512', hmacSecret).update(JSON.stringify(req.body)).digest('base64')</pre>.</li>
        <li>Compare x-payload-hash header value with calculated digest as a Base64 string.</li></p>
      operationId: enableWebHookHmac
      summary: Enable HMAC webhook digest
      tags:
        - HMAC
      requestBody:
        content:
          application/json:
            schema:
              properties:
                hmacSecret:
                  description: 'Your HMAC secret password, which is used for signing the webhook payload.'
                  example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                  type: string
                  maxLength: 100
              required:
                - txData
              type: object
        required: true
      responses:
        '204':
          description: OK
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
    delete:
      description: |
        <h4>2 credits per API call.</h4><br/><p>Disable HMAC hash ID on the fired webhooks from Tatum API.</p>
      operationId: disableWebHookHmac
      summary: Disable HMAC webhook digest
      tags:
        - HMAC
      responses:
        '204':
          description: OK
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/subscription/{id}':
    delete:
      description: <h4>1 credit for API call</h4><br/><p>Cancel existing subscription.</p>
      parameters:
        - description: Subscription ID
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 5e68c66581f2ee32bc354087
      operationId: deleteSubscription
      summary: Cancel existing subscription
      tags:
        - Subscription
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/subscription/report/{id}':
    get:
      description: |
        <h4>1 credit for API call. Based on the required report type, additional credits may be charged.</h4><br/>
        <p>Obtain report from subscription based on its type. Following reports are supported:
        <ul>
        <li><b>ACCOUNT_BALANCE_LIMIT</b> - obtain list of all ledger accounts with account balance above the limit. 1 credit per 50 returned records is charged.</li>
        <li><b>TRANSACTION_HISTORY_REPORT</b> - obtain list of all ledger transaction for last X hours from the time of invocation. 1 credit per 50 returned records is charged.</li>
        </ul></p>
      parameters:
        - description: Subscription ID
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 5e68c66581f2ee32bc354087
      operationId: getSubscriptionReport
      summary: Obtain report for subscription
      tags:
        - Subscription
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - items:
                      properties:
                        id:
                          description: Account ID.
                          example: 5e68c66581f2ee32bc354087
                          type: string
                        balance:
                          properties:
                            accountBalance:
                              description: 'Account balance represents all assets on the account, available and blocked.'
                              example: '1000000'
                              type: string
                            availableBalance:
                              description: Available balance on the account represents account balance minus blocked amount on the account. Available balance should be user do determine how much can customer send or withdraw from the account.
                              example: '1000000'
                              type: string
                          type: object
                          required:
                            - accountBalance
                            - availableBalance
                        currency:
                          description: Currency of account.
                          example: BTC
                          type: string
                        frozen:
                          description: Indicates whether account is frozen or not.
                          example: false
                          type: boolean
                        active:
                          description: Indicates whether account is active or not.
                          example: true
                          type: boolean
                        customerId:
                          description: ID of newly created customer or existing customer associated with account.
                          type: string
                          example: 5e68c66581f2ee32bc354087
                        accountCode:
                          description: For bookkeeping to distinct account purpose.
                          example: 03_ACC_01
                          type: string
                        accountingCurrency:
                          description: All transaction will be accounted in this currency for all accounts.
                          example: EUR
                          type: string
                        xpub:
                          description: Extended public key to generate addresses from.
                          example: xpub6FB4LJzdKNkkpsjggFAGS2p34G48pqjtmSktmK2Ke3k1LKqm9ULsg8bGfDakYUrdhe2EHw5uGKX9DrMbrgYnVfDwrksT4ZVQ3vmgEruo3Ka
                          type: string
                      required:
                        - id
                        - active
                        - frozen
                        - currency
                        - balance
                      type: object
                    type: array
                    title: Account
                  - items:
                      properties:
                        accountId:
                          description: Source account - source of transaction(s)
                          example: 5e6645712b55823de7ea82f1
                          type: string
                        counterAccountId:
                          description: 'Counter account - transaction(s) destination account. In case of blockchain recipient, this is addess of blockchain account.'
                          example: 5e6645712b55823de7ea82f1
                          type: string
                        currency:
                          description: Transaction currency
                          example: BTC
                          type: string
                        amount:
                          description: Amount in account's currency
                          example: '0.1'
                          type: string
                        anonymous:
                          description: 'Whether the transaction is anonymous. If true, counter account owner does not see source account.'
                          example: false
                          type: boolean
                        created:
                          description: Time in UTC of transaction.
                          example: 1572031674384
                          type: number
                        marketValue:
                          description: FIAT value of transaction.
                          properties:
                            amount:
                              description: Value of transaction in given base pair.
                              example: '1235.56'
                              type: string
                            currency:
                              description: Base pair.
                              example: EUR
                              enum:
                                - AED
                                - AFN
                                - ALL
                                - AMD
                                - ANG
                                - AOA
                                - ARS
                                - AUD
                                - AWG
                                - AZN
                                - BAM
                                - BAT
                                - BBD
                                - BCH
                                - BDT
                                - BGN
                                - BHD
                                - BIF
                                - BMD
                                - BND
                                - BOB
                                - BRL
                                - BSD
                                - BTC
                                - BTN
                                - BWP
                                - BYN
                                - BYR
                                - BZD
                                - CAD
                                - CDF
                                - CHF
                                - CLF
                                - CLP
                                - CNY
                                - COP
                                - CRC
                                - CUC
                                - CUP
                                - CVE
                                - CZK
                                - DJF
                                - DKK
                                - DOP
                                - DOGE
                                - DZD
                                - EGP
                                - ERN
                                - ETB
                                - ETH
                                - EUR
                                - FJD
                                - FKP
                                - FLOW
                                - FUSD
                                - FREE
                                - GMC
                                - GMC_BSC
                                - RMD
                                - GBP
                                - GEL
                                - GGP
                                - GHS
                                - GIP
                                - GMD
                                - GNF
                                - GTQ
                                - GYD
                                - HKD
                                - HNL
                                - HRK
                                - HTG
                                - HUF
                                - IDR
                                - ILS
                                - IMP
                                - INR
                                - IQD
                                - IRR
                                - ISK
                                - JEP
                                - JMD
                                - JOD
                                - JPY
                                - KES
                                - KGS
                                - KHR
                                - KMF
                                - KPW
                                - KRW
                                - KWD
                                - KYD
                                - KZT
                                - LAK
                                - LBP
                                - LEO
                                - LINK
                                - LKR
                                - LRD
                                - LSL
                                - LTC
                                - LTL
                                - LVL
                                - LYD
                                - MAD
                                - MDL
                                - MGA
                                - MKD
                                - MKR
                                - MMK
                                - MMY
                                - MNT
                                - MOP
                                - MRO
                                - MUR
                                - MVR
                                - MWK
                                - MXN
                                - MYR
                                - MZN
                                - NAD
                                - NGN
                                - NIO
                                - NOK
                                - NPR
                                - NZD
                                - OMR
                                - PAB
                                - PAX
                                - PAXG
                                - PEN
                                - PGK
                                - PHP
                                - PKR
                                - PLN
                                - PLTC
                                - PYG
                                - QAR
                                - RON
                                - RSD
                                - RUB
                                - RWF
                                - SAR
                                - SBD
                                - SCR
                                - SDG
                                - SEK
                                - SGD
                                - SHP
                                - SLL
                                - SOS
                                - SRD
                                - STD
                                - SVC
                                - SYP
                                - SZL
                                - THB
                                - TJS
                                - TMT
                                - TND
                                - TOP
                                - TRY
                                - TTD
                                - TRON
                                - TUSD
                                - BUSD
                                - TWD
                                - TZS
                                - UAH
                                - UGX
                                - UNI
                                - USD
                                - USDC
                                - USDT
                                - USDT_TRON
                                - USDT_MATIC
                                - QTUM
                                - UYU
                                - UZS
                                - VEF
                                - VND
                                - VUV
                                - WBTC
                                - WST
                                - XAF
                                - XAG
                                - XAU
                                - XCD
                                - XCON
                                - XDR
                                - XOF
                                - XPF
                                - XRP
                                - YER
                                - ZAR
                                - ZMK
                                - ZMW
                                - ZWL
                              type: string
                            sourceDate:
                              description: Date of validity of rate in UTC.
                              example: 1572031674384
                              type: number
                            source:
                              description: Source of base pair.
                              example: fixer.io
                              type: string
                          type: object
                          required:
                            - amount
                            - currency
                            - sourceDate
                            - source
                        operationType:
                          description: Type of operation.
                          enum:
                            - PAYMENT
                            - WITHDRAWAL
                            - BLOCKCHAIN_TRANSACTION
                            - EXCHANGE
                            - FAILED
                            - DEPOSIT
                            - MINT
                            - REVOKE
                          example: PAYMENT
                          type: string
                        transactionType:
                          description: Type of payment.
                          enum:
                            - FAILED
                            - DEBIT_PAYMENT
                            - CREDIT_PAYMENT
                            - CREDIT_DEPOSIT
                            - DEBIT_WITHDRAWAL
                            - CANCEL_WITHDRAWAL
                            - DEBIT_OUTGOING_PAYMENT
                            - CREDIT_INCOMING_PAYMENT
                            - EXCHANGE_BUY
                            - EXCHANGE_SELL
                          example: CREDIT_PAYMENT
                          type: string
                        reference:
                          description: 'Transaction internal reference - unique identifier within Tatum ledger. In order of failure, use this value to search for problems.'
                          example: 5e6be8e9e6aa436299950c41
                          type: string
                        transactionCode:
                          description: For bookkeeping to distinct transaction purpose.
                          example: 1_01_EXTERNAL_CODE
                          type: string
                        senderNote:
                          description: Note visible for sender.
                          example: Sender note
                          type: string
                        recipientNote:
                          description: Note visible for both sender and recipient.
                          example: Private note
                          type: string
                        paymentId:
                          description: Payment ID defined in payment order by sender.
                          example: '65426'
                          type: string
                        attr:
                          example: '123'
                          description: 'Present only for operationType WITHDRAWAL and XLM / XRP based accounts it represents message or destinationTag of the recipient, if present.'
                          type: string
                        address:
                          type: string
                          description: 'For operationType DEPOSIT it represents address, on which was deposit credited for the account.'
                          example: qrppgud79n5h5ehqt9s7x8uc82pcag82es0w9tada0
                        txId:
                          type: string
                          description: 'For operationType DEPOSIT, BLOCKCHAIN_TRANSACTION it represents transaction id, for which deposit occured.'
                          example: c6c176e3f6705596d58963f0ca79b34ffa5b78874a65df9c974e22cf86a7ba67
                      type: object
                      required:
                        - accountId
                        - reference
                        - anonymous
                        - amount
                        - marketValue
                        - created
                        - operationType
                        - transactionType
                        - currency
                    type: array
                    title: Transaction
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: subscription.not.exists
                        example: subscription.not.exists
                        type: string
                      message:
                        description: No such subscription.
                        example: No such subscription.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: report.invalid
                        example: report.invalid
                        type: string
                      message:
                        description: Unsupported report type.
                        example: Unsupported report type.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
components:
  securitySchemes:
    X-Api-Key:
      description: |
        To maintain the highest security level, Tatum requires X-API-Key HTTP header.
        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.
        Each X-API-Key is bound to the test or production blockchains.
      in: header
      name: x-api-key
      type: apiKey
